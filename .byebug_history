quit
kv.search('span').text.split(',').join.to_i
kv.search('span').text.split(',').join
kv.search('span').text.split(',')
kv.search('span').text
a.to_i
a = '12312'
a.to_i
a = '1,234'
kv.search('span').text
kv.search('span').text.to_i
kv.search('span').text
kv.search('strong').text
kv.search('strong')
kv_title
quit
kv_title
quit
kv_title
square_footage
next
kv.search('span').text
kv.search('span')
continue
photo_arr.each {|poop| puts poop}
photo_arr
next
agent.profile_picture_url
next
quit
agent
agent_listings[:listings].each {|x| puts x[:property][:list_price_cents]}
agent_listings[:listings].each {|x| puts x['property']['list_price_cents']}
agent_listings[:listings].each {|x| puts x[:property][:listings_price_cents]}
agent_listings[:listings].each {|x| puts x[:property][:listings_price_cents}
agent.profile_picture.url
agent.profile_picture
agent
agent.remote_profile_picture_url = portrait
agent.
next
portrait
continue
quit
a
a = a.delete(3)
a = [1,2,3,4,5]
a
a.delete(2)
a
a = a.delete(1)
a
a.delete(1)
a = [1,2,3,4,5]
agent_listings
quit
agent_listings[:listings][0]
agent_listings[:listings][0].delete(:pictures)
agent_listings[:listings][0].delete('pictures')
agent_listings[:listings][0]
agent_listings[:listings][:pictures]
agent_listings[:listings]
agent_listings[:listings].delete('pictures')
agent_listings[:listings]
agent_listings
agent_listings.delete(:pictures)
quit
tes[:portrait]
tes[:email]
tes[:full_name]
shot = [full_name: ]
tes
that_thing
that_thing = tes[:listings][0][:property]
pictures
pictures = tes[:listings][0][:pictures]
liberty[0][:address]
liberty[0]['address']
liberty[0].address
liberty[0]
liberty[:address]
liberty.push tes[:listings][0][:property]
liberty = []
liberty.push tes[:listings][0][:property]
liberty
tes[:listings][0][:property]
tes
tes[:listings][0][:property][0]
listings
listings.push tes[:listings][0][:property][0]
listings = []
tes[:listings][0][:property][0]
tes[:listings][0][:property]
listings
listings.push tes[:listings][0][:property]
listings
listing
tes[:listings][0][:pictures]
tes[:listings][0][:picture]
tes[:listings][0][:property]
tes[:listings][0]
listings = []
listings = tes[:listings]
continue
session[:agent_params]
session[:temp_agent_info]
next
session[:temp_agent_info]
tes[:listings]
quit
tes[:listings][0][:pictures]
tes[:listings][0]
tes[:listings][1]
tes[:listings][:pictures]
tes[:listings]
tes[:listings][1]
tes[:listings][2]
tes[:listings][0]
tes[:listings]
tes[:pictures]
tes.last
tes
quit
tes
tes[listings]
tes[:listings][0]
tes[:listings][1]
tes[:listings][0]
tes[:listings]
tes[:listings][:pictures]
tes.email
tes.first
tes.second
tes.third
tes.last
tes.first
tes[1]
tes[0]
tes
tes[:listings].push ary[:pictures]
tes
ary[:pictures].count
ary[:pictures].push poping
poping
poping = ary[:pictures].pop
ary[:property]
ary.property
ary
popping = ary.pop
ary[:pictures]
ary[:property]
ary[0]
ary
tes
ary
a
ary = tes[:listings].pop
tes[:listings]
tes
prop.each {|m| puts m}
prop = tes[:listings][0][:pictures]
list = tes[:listings]
listings = test[:listings]
tes[:listings]
tes[0]
tes
continue
next
resObj
resObj[{:first_name, :email, :portrait}]
resObj[:full_name, :portrait, :email]
resObj[:full_name]
resObj[0]
resObj
quit
resObj
pictures
resObj
resObj, pictures = resObj[:listings][0][:pictures]
resObj[1]
resObj[0]
resObj
resObj[:listings]
resObj[0]
resObj[:listings][0][:pictures]
resObj[:listings][0]
resObj[:listings][:pictures]
resObj[:listings]
resObj[:pictures]
resObj
quit
return 1, 2
a, bio = a
a, bio = all
a, bio
bio = [2]
b = [2]
a = [1,2,3]
listings_array[0][:pictures].count
listings_array[0][:pictures]
listings_array[0]
listings_array[:property]
listings_array[:picture]
listings_array[:pictures]
listings_array
obj
quit
session[:temp_agent_info]
quit
continue
quit
"https://3cb47f4bc2cffc4e332d-a3bd44f04b610ae94bc1211f3bda5e8e.ssl.cf5.rackcdn.com/18065376-single-family-1q8z0oi-o.jpg".bytesize
pic_array.each {|p, i=0| pp p.bytesize  } 
pic_array.each {|p, i=0| p.bytesize  } 
pic_array.each {|p, i=0| p.bytesize += i } 
"hello".bytesize
bytesize('hello')
pic_array.each {|p, i=0| p.bytesize += i } 
pic_array.size
pic_array[0]
pic_array
pic_array.flatten!
pic_array.flatten
bytesize(pic_array)
pic_array.bytesize
pic_array
quit
AgentFinder('this')
AgentFinder.nil?
AgentFinder
listing
photo_arr
listing
continue
pic_arry.count
pic_arry
quit
attri.value
attri
quit
x = src_array.map {|x| x.searchq}
src_array
src_arry
pic_arry
quit
poop.count
poop
poop = slider_array.map{|x| x.search('img').first.attribute('data-src')}
slider_array
arry
a
src_array.each {|a| arry.push(a.value)}
src_array.each {|a| arr.push(a.value)}
src_array.each {|a| (arr.push(a.value)}
src_array.each {|a| push(arr.push(a.value)}
arry = []
